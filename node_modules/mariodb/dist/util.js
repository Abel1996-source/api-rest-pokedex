"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.sql = exports.beautifyQueryResult = void 0;
var lodash_1 = require("lodash");
var change_case_1 = require("change-case");
var sql_1 = __importDefault(require("./sql"));
function beautifyQueryResult(result) {
    // DML이 아닐 경우, convertCase 해서 반환한다.
    return result.affectedRows != null ? result : result.map(convertCase);
}
exports.beautifyQueryResult = beautifyQueryResult;
/**
 * 객체의 property들의 이름을 camelCase로 바꾼다.
 *
 * @param obj 객체
 */
function convertCase(obj) {
    var pairs = lodash_1.toPairs(obj);
    var converted = pairs.map(function (_a) {
        var key = _a[0], value = _a[1];
        return [change_case_1.camelCase(key), value];
    });
    return lodash_1.fromPairs(converted);
}
function sql(strings) {
    var keys = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        keys[_i - 1] = arguments[_i];
    }
    return new sql_1.default(null, strings, keys);
}
exports.sql = sql;
